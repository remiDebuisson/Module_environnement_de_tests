name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation. 

on:
  schedule:
    - cron: '19 9 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      - name: Install Symfony
        run: |
          # Install PHP and Symfony dependencies
          apt-get update && apt-get install -y \
            php \
            composer
          # Install Symfony CLI
          wget https://get.symfony.com/cli/installer -O - | bash
          sudo mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony


      - name: Copy Symfony project
        run: |
          sudo cp -r ./src /var/www/html
          cd /var/www/html/src
          sudo composer install --no-scripts --no-autoloader

      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: remidebuisson
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Ajouter d'autres options si nécessaire
      
      - name: Build and push Docker image with Nginx
        id: docker-build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Retirer la ligne outputs
      
      # Ajoute une nouvelle étape pour récupérer le digest de l'image qui a été poussée
      - name: Get the built image's digest
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "DIGEST=${{ steps.meta.outputs.digest }}" >> $GITHUB_ENV
          
      # Et ensuite tu peux signer l'image avec ce digest
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: cosign sign --yes ${{ steps.meta.outputs.tags }}




